pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'your-registry'
        BACKEND_IMAGE = '${DOCKER_REGISTRY}/farmshop-backend'
        MICROSERVICE_IMAGE = '${DOCKER_REGISTRY}/farmshop-microservice'
        KUBECONFIG = credentials('kubeconfig')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build Backend Image') {
            steps {
                script {
                    docker.build("${BACKEND_IMAGE}:${BUILD_NUMBER}", '-f Dockerfile .')
                }
            }
        }

        stage('Build Microservice Image') {
            steps {
                script {
                    docker.build("${MICROSERVICE_IMAGE}:${BUILD_NUMBER}", '-f Dockerfile.microservice .')
                }
            }
        }

        stage('Push Images') {
            steps {
                script {
                    docker.withRegistry('https://${DOCKER_REGISTRY}', 'docker-credentials') {
                        docker.image("${BACKEND_IMAGE}:${BUILD_NUMBER}").push()
                        docker.image("${MICROSERVICE_IMAGE}:${BUILD_NUMBER}").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                        kubectl --kubeconfig=${KUBECONFIG} set image deployment/farmshop-backend farmshop-backend=${BACKEND_IMAGE}:${BUILD_NUMBER}
                        kubectl --kubeconfig=${KUBECONFIG} set image deployment/farmshop-microservice farmshop-microservice=${MICROSERVICE_IMAGE}:${BUILD_NUMBER}
                        kubectl --kubeconfig=${KUBECONFIG} rollout status deployment/farmshop-backend
                        kubectl --kubeconfig=${KUBECONFIG} rollout status deployment/farmshop-microservice
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            cleanWs()
        }
    }
}